name: test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      steps:
        - uses: actions/checkout@v4

        - name: install
          run: |
            curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash
            echo "$HOME/.moon/bin" >> $GITHUB_PATH
        - name: moon version
          run: |
            moon version --all
            moonrun --version

        - name: moon check
          run: moon check --deny-warn

        - name: moon info
          run: |
            moon info
            git diff --exit-code

        - name: Set ulimit and run moon test
          run: |
            ulimit -s 8176
            moon test --target all
            moon test --release --target all            

        - name: moon bundle
          run: moon bundle --all

        - name: check core size
          run: find ./target -name '*.core' | xargs ls -lh

        - name: format diff
          run: |
            moon fmt
            git diff --exit-code  

  GetTestFiles:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/checkout@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: GetTestFiles
      run: |
        python Agent.py --api_key ${{ secrets.API_KEY }} --path ./

  coverage-check:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: install
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash
          echo "$HOME/.moon/bin" >>$GITHUB_PATH

      - name: moon test
        run: moon test --enable-coverage

      - name: coverage report
        run: |
          moon coverage report -f summary summary > coverage_summary.txt
          cat coverage_summary.txt >> "$GITHUB_STEP_SUMMARY"
          moon coverage report \
            -f coveralls \
            -o codecov_report.json \
            --service-name github \
            --service-job-id "$GITHUB_RUN_NUMBER" \
            --service-pull-request "${{ github.event.number }}" \
            --send-to coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}